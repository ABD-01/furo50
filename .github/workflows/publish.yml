name: Upload Python Package

on:
  push:
    branches: [master]
    tags: ["*"]
  release:
    types: [published]
  workflow_dispatch:

permissions:
  attestations: write
  contents: read
  id-token: write

jobs:

  build-package:
    name: Build package
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-testpypi:
    name:  Publish Python üêç distribution üì¶ to TestPyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-package
    environment:
      name: testpypi
      url: https://test.pypi.org/p/furo50

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          # user: __token__
          # password: ${{ secrets.TEST_PYPI_API_TOKEN }}

  publish-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI 
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-package
    environment:
      name: pypi
      url: https://pypi.org/p/furo50

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
